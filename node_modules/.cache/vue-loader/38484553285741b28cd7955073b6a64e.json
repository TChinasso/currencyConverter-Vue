{"remainingRequest":"C:\\Users\\Thiago\\Desktop\\projects\\moenycurrency\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\Thiago\\Desktop\\projects\\moenycurrency\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Thiago\\Desktop\\projects\\moenycurrency\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Thiago\\Desktop\\projects\\moenycurrency\\src\\components\\main.vue?vue&type=template&id=5c886d6e&scoped=true&","dependencies":[{"path":"C:\\Users\\Thiago\\Desktop\\projects\\moenycurrency\\src\\components\\main.vue","mtime":1611598469642},{"path":"C:\\Users\\Thiago\\Desktop\\projects\\moenycurrency\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Thiago\\Desktop\\projects\\moenycurrency\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\Thiago\\Desktop\\projects\\moenycurrency\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Thiago\\Desktop\\projects\\moenycurrency\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Thiago\\Desktop\\projects\\moenycurrency\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Thiago\\Desktop\\projects\\moenycurrency\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\Thiago\\Desktop\\projects\\moenycurrency\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Thiago\\Desktop\\projects\\moenycurrency\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}